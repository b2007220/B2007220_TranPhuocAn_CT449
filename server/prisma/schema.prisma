generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id         String     @id @default(auto()) @map("_id") @db.ObjectId
  username   String     @unique
  password   String?
  uid        String?    @unique
  fullName   String?
  address    String?
  phone      String?
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  isEmployee Boolean?   @default(false)
  customer   Customer[]
  employee   Employee[]
}

model Customer {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  orders    Order[]
  accountId String  @db.ObjectId
  account   Account @relation(fields: [accountId], references: [id])
}

enum Role {
  MANAGER
  EMPLOYEE
}

model Employee {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  role      Role     @default(EMPLOYEE)
  orders    Order[]
  accountId String?  @db.ObjectId
  account   Account? @relation(fields: [accountId], references: [id])
}

enum Status {
  PENDING
  DELIVERING
  DELIVERED
  UNACCEPTED
}

model Order {
  id           String        @id @default(auto()) @map("_id") @db.ObjectId
  customerId   String?        @db.ObjectId
  customer     Customer?      @relation(fields: [customerId], references: [id])
  employeeId   String?       @db.ObjectId
  employee     Employee?     @relation(fields: [employeeId], references: [id])
  orderDate    DateTime      @default(now())
  deliveryDate DateTime?
  status       Status        @default(PENDING)
  total        Float
  orderDetails OrderDetail[]
}

model ProductPicture {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  url       String
  productId String  @db.ObjectId
  product   Product @relation(fields: [productId], references: [id])
}

model Product {
  id              String           @id @default(auto()) @map("_id") @db.ObjectId
  name            String
  price           Float
  description     String?
  stock           Int
  notes           String?
  productPictures ProductPicture[]
  orderDetails    OrderDetail[]
}

model OrderDetail {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  productId String?  @db.ObjectId
  product   Product? @relation(fields: [productId], references: [id])
  orderId   String?  @db.ObjectId
  order     Order?   @relation(fields: [orderId], references: [id])
  quantity  Int
  unitPrice Float
  discount  Float   @default(0)
}
